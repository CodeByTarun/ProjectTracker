<Window x:Class="ProjectTracker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProjectTracker"
        xmlns:fa="http://schemas.fontawesome.com/icons/"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:vm="clr-namespace:ProjectTracker.ClassLibrary.ViewModels;assembly=ProjectTracker.ClassLibrary"
        xmlns:views="clr-namespace:ProjectTracker.Views"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:popups="clr-namespace:ProjectTracker.Popups"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=vm:TabViewModel, IsDesignTimeCreatable=True}"
        Title="MainWindow" Height="450" Width="900" MinWidth="600">

    <Grid Background="{StaticResource QuaternaryColorBrush}">

        <Frame x:Name="MainFrame" 
               NavigationUIVisibility="Hidden"/>

        <Grid x:Name="PopupGrid" Panel.ZIndex="1">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ProjectPopupViewModel.IsVisible}" Value="True">
                            <Setter Property="Visibility" Value='Visible'/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding BoardPopupViewModel.IsVisible}" Value="True">
                            <Setter Property="Visibility" Value='Visible'/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding GroupPopupViewModel.IsVisible}" Value="True">
                            <Setter Property="Visibility" Value='Visible'/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IssuePopupViewModel.IsVisible}" Value="True">
                            <Setter Property="Visibility" Value='Visible'/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <Grid.Background>
                <SolidColorBrush Color="Black" Opacity="0.5"/>
            </Grid.Background>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid x:Name="ProjectPopupGrid" Grid.Row="1" Grid.Column="1">
                    <popups:ProjectPopup x:Name="ProjectPopup" DataContext="{Binding ProjectPopupViewModel}">
                        <popups:ProjectPopup.Style>
                            <Style TargetType="popups:ProjectPopup">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                        <Setter Property="Visibility" Value='Visible'/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </popups:ProjectPopup.Style>
                    </popups:ProjectPopup>
                </Grid>

                <Grid x:Name="BoardPopupGrid" Grid.Row="1" Grid.Column="1">
                    <popups:BoardPopup x:Name="BoardPopup" DataContext="{Binding BoardPopupViewModel}">
                        <popups:BoardPopup.Style>
                            <Style TargetType="popups:BoardPopup">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                        <Setter Property="Visibility" Value='Visible'/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </popups:BoardPopup.Style>
                    </popups:BoardPopup>
                </Grid>

                <Grid x:Name="GroupPopupGrid" Grid.Row="1" Grid.Column="1">
                    <popups:GroupPopup x:Name="GroupPopup" DataContext="{Binding GroupPopupViewModel}">
                        <popups:GroupPopup.Style>
                            <Style TargetType="popups:GroupPopup">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                        <Setter Property="Visibility" Value='Visible'/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </popups:GroupPopup.Style>
                    </popups:GroupPopup>
                </Grid>

                <Grid x:Name="IssuePopupGrid" Grid.Row="1" Grid.Column="1">
                    <popups:IssuePopup x:Name="IssuePopup" DataContext="{Binding IssuePopupViewModel}">
                        <popups:IssuePopup.Style>
                            <Style TargetType="popups:IssuePopup">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                        <Setter Property="Visibility" Value='Visible'/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </popups:IssuePopup.Style>
                    </popups:IssuePopup>
                </Grid>

            </Grid>
        </Grid>
    </Grid>
</Window>
