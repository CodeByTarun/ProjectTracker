<Window x:Class="ProjectTracker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProjectTracker"
        xmlns:fa="http://schemas.fontawesome.com/icons/"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:vm="clr-namespace:ProjectTracker.ClassLibrary.ViewModels;assembly=ProjectTracker.ClassLibrary"
        xmlns:views="clr-namespace:ProjectTracker.Views"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:popups="clr-namespace:ProjectTracker.Popups"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=vm:TabViewModel, IsDesignTimeCreatable=True}"
        WindowStyle="None" Background="Transparent" ResizeMode="CanResize" AllowsTransparency="True"
        StateChanged="Window_StateChanged"
        Title="Project Tracker" Height="800" Width="900" MinWidth="800">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="30"
                        CornerRadius="0"
                        GlassFrameThickness="0"
                        NonClientFrameEdges="None"
                        ResizeBorderThickness="5"
                        UseAeroCaptionButtons="True"/>
    </WindowChrome.WindowChrome>

    <Border Background="Transparent">
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Effect" Value="{StaticResource BasicDropShadow}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized">
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Effect" Value="{x:Null}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <Grid Background="{StaticResource LightPrimaryColorBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

            <Frame x:Name="MainFrame" NavigationUIVisibility="Hidden"/>

            <Grid x:Name="PopupGrid" Panel.ZIndex="1">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ProjectPopupViewModel.IsVisible}" Value="True">
                                <Setter Property="Visibility" Value='Visible'/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding BoardPopupViewModel.IsVisible}" Value="True">
                                <Setter Property="Visibility" Value='Visible'/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding GroupPopupViewModel.IsVisible}" Value="True">
                                <Setter Property="Visibility" Value='Visible'/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IssuePopupViewModel.IsVisible}" Value="True">
                                <Setter Property="Visibility" Value='Visible'/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TagPopupViewModel.IsVisible}" Value="True">
                                <Setter Property="Visibility" Value='Visible'/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DeletePopupViewModel.IsVisible}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Grid.Background>
                    <SolidColorBrush Color="Black" Opacity="0.5"/>
                </Grid.Background>

                <Grid>
                    <Grid x:Name="ProjectPopupGrid" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <popups:ProjectPopup x:Name="ProjectPopup" DataContext="{Binding ProjectPopupViewModel}">
                            <popups:ProjectPopup.Style>
                                <Style TargetType="popups:ProjectPopup">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                            <Setter Property="Visibility" Value='Visible'/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </popups:ProjectPopup.Style>
                        </popups:ProjectPopup>
                    </Grid>

                    <Grid x:Name="BoardPopupGrid" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <popups:BoardPopup x:Name="BoardPopup" DataContext="{Binding BoardPopupViewModel}">
                            <popups:BoardPopup.Style>
                                <Style TargetType="popups:BoardPopup">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                            <Setter Property="Visibility" Value='Visible'/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </popups:BoardPopup.Style>
                        </popups:BoardPopup>
                    </Grid>

                    <Grid x:Name="GroupPopupGrid" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <popups:GroupPopup x:Name="GroupPopup" DataContext="{Binding GroupPopupViewModel}">
                            <popups:GroupPopup.Style>
                                <Style TargetType="popups:GroupPopup">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                            <Setter Property="Visibility" Value='Visible'/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </popups:GroupPopup.Style>
                        </popups:GroupPopup>
                    </Grid>

                    <Grid x:Name="IssuePopupGrid" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <popups:IssuePopup x:Name="IssuePopup" DataContext="{Binding IssuePopupViewModel}">
                            <popups:IssuePopup.Style>
                                <Style TargetType="popups:IssuePopup">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                            <Setter Property="Visibility" Value='Visible'/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </popups:IssuePopup.Style>
                        </popups:IssuePopup>
                    </Grid>

                    <Grid x:Name="TagPopupGrid" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <popups:TagPopup x:Name="TagPopup" DataContext="{Binding TagPopupViewModel}">
                            <popups:TagPopup.Style>
                                <Style TargetType="popups:TagPopup">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                            <Setter Property="Visibility" Value='Visible'/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </popups:TagPopup.Style>
                        </popups:TagPopup>
                    </Grid>

                    <Grid x:Name="DeletePopupGrid" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <popups:DeletePopup x:Name="DeletePopup" DataContext="{Binding DeletePopupViewModel}">
                            <popups:DeletePopup.Style>
                                <Style TargetType="popups:DeletePopup">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                            <Setter Property="Visibility" Value='Visible'/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </popups:DeletePopup.Style>
                        </popups:DeletePopup>
                    </Grid>

                </Grid>
            </Grid>
        </Grid>
    </Border>
</Window>
