<UserControl x:Class="ProjectTracker.Controls.BoardListControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProjectTracker.Controls"
             xmlns:fa="http://schemas.fontawesome.com/icons/"
             xmlns:cm="clr-namespace:ProjectTracker.Commands"
             xmlns:vm="clr-namespace:ProjectTracker.ClassLibrary.ViewModels.ControlViewModels;assembly=ProjectTracker.ClassLibrary" xmlns:sys="clr-namespace:System;assembly=mscorlib"
             d:DataContext="{d:DesignInstance Type=vm:BoardListViewModel, IsDesignTimeCreatable=True}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    
    <Grid Margin="0,0,0,0">
        <Grid Background="{StaticResource PrimaryColorBrush}">
            <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Header -->
            <Grid Grid.Row="0" Margin="0,0,10,20" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <Grid x:Name="HeaderGrid" Grid.Row="0" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Viewbox Height="95" VerticalAlignment="Center" Margin="-5,-10,0,0" HorizontalAlignment="Left">
                        <TextBlock Text="{Binding CurrentProject.Name}" Style="{StaticResource HeaderTextBlockStyle}" LineStackingStrategy="BlockLineHeight" LineHeight="65"/>
                    </Viewbox>
                    
                    <Button x:Name="CreateBoardButton" Content="Create Board" Grid.Column="2"
                            Command="{Binding CreateBoardCommand}" CommandParameter="{Binding SelectedBoard}" 
                            Margin="0,0,0,0" VerticalAlignment="Center" Style="{StaticResource AddButton}">
                    </Button>

                    <Button x:Name="EditRemoveMenuButton" Content="Menu" VerticalAlignment="Center" Margin="0,0,5,0" Style="{StaticResource MenuButton}" Grid.Column="1">
                        <Button.ContextMenu>
                            <ContextMenu x:Name="EditRemoveContextMenu" Style="{StaticResource ItemMenuStyle}">
                                <MenuItem Header="Edit Project" Click="EditProject_Click" Style="{StaticResource EditMenuItemStyle}"/>
                                <MenuItem Header="Delete Project" Click="RemoveProject_Click" Style="{StaticResource RemoveMenuItemStyle}"/>
                            </ContextMenu>
                        </Button.ContextMenu>

                        <Button.Triggers>
                            <EventTrigger SourceName="EditRemoveMenuButton" RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="EditRemoveContextMenu" Storyboard.TargetProperty="(ContextMenu.IsOpen)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                </Grid>

                <TextBlock Text="{Binding ProjectDescription}" Grid.Row="1" Grid.Column="0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource DescriptionTextBlockStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ProjectDescription}" Value="">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>


                <StackPanel x:Name="TagsAndStatusStackPanel" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" Orientation="Horizontal" Style="{StaticResource TagAndStatusStackPanel}">
                    <Border x:Name="StatusBorder" CornerRadius="10" Background="Gray" VerticalAlignment="Center">
                        <Border.ToolTip>
                            <ToolTip Content="Status"/>
                        </Border.ToolTip>
                        <TextBlock Text="{Binding ProjectStatus}" Foreground="{StaticResource MainFontColorBrush}" Margin="10,5,10,5"/>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ProjectStatus}" Value="">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                    <local:TagListControl TagList="{Binding ProjectTags}" VerticalAlignment="Top" Margin="7,0,0,0"/>
                </StackPanel>
            </Grid>

            <Grid x:Name="FilterControlsGrid" Grid.Row="1" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MaxWidth="500"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Search -->
                <local:SearchControl x:Name="BoardSearchBox" Grid.Column="0"
                                     SearchText="{Binding BoardSearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     PlaceholderText="Search Boards"
                                     HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="10,0,0,0"/>

                <local:ComboBoxWithCommandControl x:Name="TagComboBox" Grid.Column="1" Height="30"
                                              VerticalAlignment="Center"
                                              PlaceholderText="Tag"
                                              IsPathNameRequired="True"
                                              Items="{Binding TagList, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                              SelectedItem="{Binding SelectedTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DropDownCommand="{Binding TagFilterCommand}">

                </local:ComboBoxWithCommandControl>

                <local:ComboBoxWithCommandControl x:Name="StatusComboBox" Grid.Column="2" Height="30"
                                              Margin="0,0,10,0" VerticalAlignment="Center"
                                              IsPathNameRequired="False"
                                              PlaceholderText="Status"  
                                              Items="{StaticResource ObjectStatusArray}"
                                              SelectedItem="{Binding SelectedStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              DropDownCommand="{Binding StatusFilterCommand}">

                </local:ComboBoxWithCommandControl>

            </Grid> 
            

            <!-- Data Grid -->
            <DataGrid x:Name="BoardDataGrid" Grid.Row="2" Grid.ColumnSpan="2" Margin="10" Loaded="BoardDataGrid_Loaded" GridLinesVisibility="None"
                  ItemsSource="{Binding BoardList}" SelectedItem="{Binding SelectedBoard, Mode=TwoWay}" HorizontalScrollBarVisibility="Disabled"
                  Style="{StaticResource BaseDataGridStyle}" IsSynchronizedWithCurrentItem="True" 
                  Background="Transparent">

                <DataGrid.Resources>
                    <ContextMenu x:Key="BoardMenu" Style="{StaticResource ItemMenuStyle}">
                        <MenuItem Header="Open Board" Click="OpenBoard_Click" Style="{StaticResource OpenMenuItemStyle}"/>
                        <MenuItem Header="Edit Board" Click="EditBoard_Click" Style="{StaticResource EditMenuItemStyle}"/>
                        <MenuItem Header="Delete Board" Click="DeleteBoard_Click" Style="{StaticResource RemoveMenuItemStyle}"/>
                    </ContextMenu>

                    <Style x:Key="MenuDataCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource BaseDataCellStyle}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid x:Name="MenuGrid" HorizontalAlignment="Stretch" Background="{StaticResource PrimaryColorBrush}"
                                          ContextMenu="{StaticResource BoardMenu}" MouseUp="MenuGrid_MouseUp">
                                        <fa:SvgAwesome x:Name="Menu" Icon="Solid_EllipsisH" Height="15" Visibility="Hidden" Foreground="{StaticResource MainFontColorBrush}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                                            <Setter TargetName="Menu" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="MenuGrid" Property="Background" Value="{StaticResource LightPrimaryColorBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                                            <Setter TargetName="Menu" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="MenuGrid" Property="Background" Value="{StaticResource DarkSecondaryColorBrush}"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="1.5*" HeaderStyle="{StaticResource BaseDataGridHeaderStyle}" 
                                        CellStyle="{StaticResource BaseDataCellStyle}" ElementStyle="{StaticResource DataGridTextBlockStyle}"/>
                    <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="3*" HeaderStyle="{StaticResource BaseDataGridHeaderStyle}" 
                                        CellStyle="{StaticResource BaseDataCellStyle}" ElementStyle="{StaticResource DataGridTextBlockStyle}"/>
                    <DataGridTextColumn Header="Tags" Binding="{Binding Tags}" Width="2*" HeaderStyle="{StaticResource BaseDataGridHeaderStyle}" CanUserSort="False" 
                                    ElementStyle="{StaticResource DataGridTextBlockStyle}">
                        <DataGridTextColumn.CellStyle>
                            <Style BasedOn="{StaticResource BaseDataCellStyle}" TargetType="DataGridCell">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <local:TagListControl TagList="{Binding Tags}" IsVerticalMarginRequired="True" Margin="0,0,0,10" Height="Auto"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    
                    <DataGridTextColumn Header="Deadline" Binding="{Binding DeadlineDate, StringFormat='{}{0: MMM d, yyyy}'}" Width="140" HeaderStyle="{StaticResource BaseDataGridHeaderStyle}"
                                    CellStyle="{StaticResource BaseDataCellStyle}" ElementStyle="{StaticResource DataGridTextBlockStyle}"/>
                    <DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="80" HeaderStyle="{StaticResource BaseDataGridHeaderStyle}"
                                    CellStyle="{StaticResource BaseDataCellStyle}" ElementStyle="{StaticResource DataGridTextBlockStyle}"/>
                </DataGrid.Columns>

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource DataGridRowStyle}">
                        <Setter Property="ContextMenu" Value="{StaticResource BoardMenu}"/>
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>

                <DataGrid.InputBindings>
                    <MouseBinding Gesture="LeftDoubleClick"
                              Command="{Binding OpenBoardCommand}"
                              CommandParameter="{Binding ElementName=BoardDataGrid, Path=SelectedItem}"/>
                </DataGrid.InputBindings>
            </DataGrid>

        </Grid>
    </Grid>
</UserControl>
