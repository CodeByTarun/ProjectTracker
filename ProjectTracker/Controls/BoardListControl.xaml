<UserControl x:Class="ProjectTracker.Controls.BoardListControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProjectTracker.Controls"
             xmlns:fa="http://schemas.fontawesome.com/icons/"
             xmlns:cm="clr-namespace:ProjectTracker.Commands"
             xmlns:vm="clr-namespace:ProjectTracker.ClassLibrary.ViewModels.ControlViewModels;assembly=ProjectTracker.ClassLibrary"
             d:DataContext="{d:DesignInstance Type=vm:BoardListViewModel, IsDesignTimeCreatable=True}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid Background="LightBlue">
            <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Header -->
            <StackPanel Orientation="Horizontal" Grid.Row="0">
                <TextBlock Text="My Boards" FontSize="45" Margin="10,0,0,0" 
                       FontWeight="Bold" VerticalAlignment="Center"/>
                <Button x:Name="CreateBoardButton" Content="+" Width="20" Height="20" Command="{Binding CreateBoardCommand}" CommandParameter="{Binding SelectedBoard}" 
                    Margin="20,0,0,0" VerticalAlignment="Center"/>
            </StackPanel>

            <!-- Search -->
            <TextBox x:Name="BoardSearchBox" Grid.Row="1" Grid.ColumnSpan="2" Height="20" 
                 Text="{Binding BoardSearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,10,10,0"/>

            <!-- Data Grid -->
            <DataGrid x:Name="BoardDataGrid" Grid.Row="2" Grid.ColumnSpan="2" Margin="10" Loaded="BoardDataGrid_Loaded" 
                  ItemsSource="{Binding BoardList}" SelectedItem="{Binding SelectedBoard, Mode=TwoWay}"
                  Style="{StaticResource BaseDataGridStyle}" IsSynchronizedWithCurrentItem="True" 
                  Background="Transparent">

                <DataGrid.Resources>
                    <ContextMenu x:Key="BoardMenu">
                        <MenuItem Header="Open Board" Click="OpenBoard_Click"/>
                        <MenuItem Header="Edit Board" Click="EditBoard_Click"/>
                        <MenuItem Header="Delete Board" Click="DeleteBoard_Click"/>
                    </ContextMenu>

                    <Style x:Key="MenuDataCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource BaseDataCellStyle}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid x:Name="MenuGrid" HorizontalAlignment="Stretch" ContextMenu="{StaticResource BoardMenu}" MouseUp="MenuGrid_MouseUp">
                                        <fa:SvgAwesome x:Name="Menu" Icon="Solid_EllipsisH" Height="15" Visibility="Hidden"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                                            <Setter TargetName="Menu" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="MenuGrid" Property="Background" Value="{StaticResource DataGridHoverColorBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                                            <Setter TargetName="Menu" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="MenuGrid" Property="Background" Value="{StaticResource DataGridSelectedColorBush}"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="2*" HeaderStyle="{StaticResource BaseDataGridHeaderStyle}" CellStyle="{StaticResource BaseDataCellStyle}" ElementStyle="{StaticResource DataGridTextBlockStyle}"/>
                    <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="3*" HeaderStyle="{StaticResource BaseDataGridHeaderStyle}" CellStyle="{StaticResource BaseDataCellStyle}" ElementStyle="{StaticResource DataGridTextBlockStyle}"/>
                    <DataGridTextColumn Header="Date Created" Binding="{Binding DateCreated}" Width="*" HeaderStyle="{StaticResource BaseDataGridHeaderStyle}" CellStyle="{StaticResource BaseDataCellStyle}" ElementStyle="{StaticResource DataGridTextBlockStyle}"/>
                    <DataGridTextColumn Width="*" HeaderStyle="{StaticResource BlankGridHeaderStyle}" CellStyle="{StaticResource MenuDataCellStyle}"/>
                </DataGrid.Columns>

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="ContextMenu" Value="{StaticResource BoardMenu}"/>
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.InputBindings>
                    <MouseBinding Gesture="LeftDoubleClick"
                              Command="{Binding OpenBoardCommand}"
                              CommandParameter="{Binding ElementName=BoardDataGrid, Path=SelectedItem}"/>
                </DataGrid.InputBindings>
            </DataGrid>

        </Grid>
    </Grid>
</UserControl>
