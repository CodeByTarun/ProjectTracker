<UserControl x:Class="ProjectTracker.Controls.ComboBoxWithCommandControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProjectTracker.Controls"
             mc:Ignorable="d" 
             x:Name="self"
             d:DesignHeight="20" d:DesignWidth="150"
            xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <Grid x:Name="ComboBoxGrid" Background="Transparent" MinWidth="175">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <ComboBox x:Name="ComboBoxWithCommand" Grid.Column="1" MaxDropDownHeight="100"
                  IsTextSearchEnabled="True" IsEditable="True" VerticalContentAlignment="Center"
                  ItemsSource="{Binding Items, RelativeSource={RelativeSource AncestorType=local:ComboBoxWithCommandControl}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                  SelectedItem="{Binding SelectedItem, ElementName=self, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                  DropDownClosed="ItemComboBox_DropDownClosed" PreviewTextInput="ComboBox_PreviewTextInput">

            <ComboBox.Style>
                <Style TargetType="ComboBox" BasedOn="{StaticResource CustomComboBox}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPathNameRequired, RelativeSource={RelativeSource AncestorType=local:ComboBoxWithCommandControl}}" Value="True">
                            <Setter Property="DisplayMemberPath" Value="Name"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <Button x:Name="ResetFilterButton" Grid.Column="0" Click="RestFilterButton_Click" Margin="5,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Center">
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource CloseButton}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SelectedItem, ElementName=ComboBoxWithCommand, Converter={StaticResource IsNullConverter}}" Value="False"/>
                                <Condition Binding="{Binding IsMouseOver, ElementName=ComboBoxGrid}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <TextBlock x:Name="PlaceholderTextBlock" Grid.Column="1" Text="{Binding PlaceholderText, RelativeSource={RelativeSource AncestorType=local:ComboBoxWithCommandControl}}" 
                   Panel.ZIndex="1" VerticalAlignment="Center" Margin="5,0,0,0">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="IsHitTestVisible" Value="False"/>
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Setter Property="Foreground" Value="Gray"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, ElementName=ComboBoxWithCommand}" Value="">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger  Binding="{Binding IsMouseOver, ElementName=ComboBoxWithCommand}" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource MainFontColorBrush}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </Grid>
</UserControl>
 